{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","Price","Title","styled","h1","props","theme","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","coinId","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","useQuery","fetchCoinInfo","infoLoading","isLoading","infoData","data","fetchCoinTickers","tickersLoading","tickersData","loading","name","rank","symbol","open_source","description","total_supply","max_supply","to","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","map","coin","pathname","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.53598839.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}","\n   \nfunction Chart() {\n    return <h1>Chart</h1>;\n  }\n  \n  export default Chart;","function Price() {\n    return <h1>Price</h1>;\n  }\n  \n  export default Price;","import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Open Source:</span>\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: orange;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/cryptotracker\">\n          <Coins />\n        </Route>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};"],"sourceRoot":""}